@using TrainingGuides.Web.Features.Membership.Widgets.Registration

@model RegistrationWidgetViewModel

@{
    // Using a new guid ensures no conflict if, for some reason, multiple widgets are on the same page.
    var formDivId = $"registerForm{Guid.NewGuid()}";

    bool isMisconfigured = Model == null
        || string.IsNullOrWhiteSpace(Model.BaseUrl)
        || string.IsNullOrWhiteSpace(Model.SubmitButtonText)
        || string.IsNullOrWhiteSpace(Model.UserNameLabel)
        || string.IsNullOrWhiteSpace(Model.EmailAddressLabel)
        || string.IsNullOrWhiteSpace(Model.PasswordLabel)
        || string.IsNullOrWhiteSpace(Model.ConfirmPasswordLabel)
        || (Model.ShowName && (string.IsNullOrWhiteSpace(Model.GivenNameLabel) || string.IsNullOrWhiteSpace(Model.FamilyNameLabel) || string.IsNullOrWhiteSpace(Model.FamilyNameFirstLabel)))
        || (Model.ShowExtraFields && string.IsNullOrWhiteSpace(Model.FavoriteCoffeeLabel));
}

@if (isMisconfigured)
{
    <tg-page-builder-content>
        <tg-configure-widget-instructions />
    </tg-page-builder-content>
    
    return;
}

<h3>@Model.FormTitle</h3>

@using (Html.AjaxBeginForm("Register", "Registration", new AjaxOptions
 {
     HttpMethod = "POST",
     InsertionMode = InsertionMode.Replace,
     UpdateTargetId = formDivId
 }, new { action = $"{Model.BaseUrl}/Registration/Register" }))
 {
    <div id="@formDivId">
        <partial name="~/Features/Membership/Widgets/Registration/RegistrationForm.cshtml" model="Model" />
    </div>
 }
